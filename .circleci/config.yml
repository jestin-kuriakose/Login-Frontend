# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  jira: circleci/jira@1.3.1

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - node/test:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          version: '16.10'
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
  jira-workflow:
    jobs:
      component-A:
        docker:
          - image: circleci/node:10
        steps:
          - checkout
          - run: exit 0
          - jira/notify
        working_directory: ~/repo
      component-B:
        docker:
          - image: circleci/node:10
        steps:
          - checkout
          - run: sleep 2
          - jira/notify
        working_directory: ~/repo
      deploy:
        docker:
          - image: circleci/node:10
        steps:
          - checkout
          - run: echo "hi Jira"
        working_directory: ~/repo
      integration:
        docker:
          - image: circleci/node:10
        steps:
          - checkout
          - run: echo "hi Jira"
          - jira/notify
        working_directory: ~/repo
    orbs:
      jira: circleci/jira@x.y.z
    version: 2.1
    workflows:
      build-deploy:
        jobs:
          - component-A
          - component-B
          - integration:
              requires:
                - component-A
                - component-B
          - deploy:
              name: Dev East
              post-steps:
                - jira/notify:
                    environment_type: development
                    job_type: deployment
              requires:
                - integration
          - deploy:
              name: Test East
              post-steps:
                - jira/notify:
                    environment_type: testing
                    job_type: deployment
              requires:
                - Dev East
          - hold:
              name: Verify
              requires:
                - Test East
              type: approval
          - deploy:
              name: Prod East
              post-steps:
                - jira/notify:
                    environment_type: production
                    job_type: deployment
              requires:
                - Verify
